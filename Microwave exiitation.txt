OutputFormat = OVF2_TEXT
nx1 := 128
ny1 := 128
nz1 := 64
setgridsize(nx1, ny1, nz1)
setcellsize(2e-9, 2e-9, 2e-9)
A := 2.19e-12
DD := 0.395e-3
L := 70e-9
initial := 1
final := 45
c1 := (layer(0))
c2 := circle(2.86 * L).intersect(layers(initial, final))
c3 := (layers(final, final+3))
Enabledemag = true
setgeom(c1.add(c2).add(c3))
defregion(1, c1)
defregion(2, c2)
defregion(3, c3)
Aex = A
Msat = 384e3
ku1.setregion(1, .8e6)
anisU.setregion(1, vector(0, 0, 1))
ku1.setregion(2, 0e0)
anisU.setregion(2, vector(0, 0, 0))
Dbulk.setregion(2, DD)
ku1.setregion(3, .8e6)
anisU.setregion(3, vector(0, 0, 1))
m.loadfile("./final.ovf")
alpha = .01
SetSolver(4)
fixdt = 0
Headroom = 0.9
MaxDt = 0
MinDt = 0
MaxErr = 1e-7
MinimizerSamples = 11
MinimizerStop = 1e-6
run(1e-9)
saveas(m, "final")
f := 7 * 1e9
ho := 2 * 1e-3
B_ext.setregion(2, vector(0, 0, ho*sin(2*pi*t*f)))
dtt := 1 / (22 * f)
autosave(m, dtt)
run(8e-9)